services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
      - traefik_data:/letsencrypt
    networks:
      - monitoring
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"

  mediamtx:
    image: bluenviron/mediamtx:1.10.0
    container_name: mediamtx
    restart: unless-stopped
    ports:
      - "8554:8554" # RTSP
      - "5555:5555" # UDP stream
      - "8888:8888" # HLS
      - "8889:8889" # WebRTC
      - "9997:9997" # API
      - "9998:9998" # Metrics
    volumes:
      - ./mediamtx.yml:/mediamtx.yml
    networks:
      monitoring:
        aliases:
          - mediamtx.localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mediamtx-api.rule=Host(`api.mediamtx.local`)"
      - "traefik.http.routers.mediamtx-api.service=mediamtx-api"
      - "traefik.http.services.mediamtx-api.loadbalancer.server.port=9997"
      - "traefik.http.routers.mediamtx-metrics.rule=Host(`metrics.mediamtx.local`)"
      - "traefik.http.routers.mediamtx-metrics.service=mediamtx-metrics"
      - "traefik.http.services.mediamtx-metrics.loadbalancer.server.port=9998"
      - "traefik.http.routers.mediamtx-hls.rule=Host(`hls.mediamtx.local`)"
      - "traefik.http.routers.mediamtx-hls.service=mediamtx-hls"
      - "traefik.http.services.mediamtx-hls.loadbalancer.server.port=8888"
      - "traefik.http.routers.mediamtx-webrtc.rule=Host(`webrtc.mediamtx.local`)"
      - "traefik.http.routers.mediamtx-webrtc.service=mediamtx-webrtc"
      - "traefik.http.services.mediamtx-webrtc.loadbalancer.server.port=8889"

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    networks:
      - monitoring
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
    environment:
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    volumes:
      - n8n_data:/home/node/.n8n

  postgres:
    image: postgres:latest
    container_name: mediamtx-panel-postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=bgCHKMhIKNov8PaG
      - POSTGRES_DB=mediamtx-panel
    ports:
      - "5432:5432"
    networks:
      - monitoring
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  monitoring:
    driver: bridge

volumes:
  traefik_data: {}
  n8n_data: {}
  postgres_data: {}
